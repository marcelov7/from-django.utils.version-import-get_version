#!/usr/bin/env python3
"""
Script para FOR√áAR RESET DE SENHAS no deploy
Este script executa automaticamente e corrige senhas inv√°lidas
"""

import os
import sys
import django

# Configurar Django para produ√ß√£o
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'relatorio_system.settings')
os.environ['ENVIRONMENT'] = 'production'

django.setup()

from django.contrib.auth import get_user_model

def main():
    print("üîë AUTO-CORRE√á√ÉO DE SENHAS INICIADA...")
    
    User = get_user_model()
    
    # Verificar se h√° usu√°rios
    total_users = User.objects.count()
    print(f"üë• Total de usu√°rios encontrados: {total_users}")
    
    if total_users == 0:
        print("‚ùå Nenhum usu√°rio encontrado. Criando admin...")
        create_admin_user(User)
        return
    
    # Listar usu√°rios atuais
    print("üìã Usu√°rios existentes:")
    for user in User.objects.all():
        tipo = "SUPERUSER" if user.is_superuser else "STAFF" if user.is_staff else "USER"
        print(f"   - {user.username} ({tipo})")
    
    # Corrigir senhas
    fix_passwords(User)
    
    print("‚úÖ AUTO-CORRE√á√ÉO CONCLU√çDA!")

def create_admin_user(User):
    """Cria usu√°rio admin se n√£o existir"""
    try:
        admin = User.objects.create_superuser(
            username='admin',
            email='admin@sistema.com',
            password='admin123',
            first_name='Administrador',
            last_name='Sistema',
            departamento='TI',
            cargo='Administrador',
            is_manager=True
        )
        print("‚úÖ ADMIN CRIADO: admin / admin123")
    except Exception as e:
        print(f"‚ùå Erro ao criar admin: {e}")

def fix_passwords(User):
    """Corrige senhas dos usu√°rios existentes"""
    
    # Corrigir admin
    try:
        admin = User.objects.get(username='admin')
        admin.set_password('admin123')
        admin.is_superuser = True
        admin.is_staff = True
        admin.is_active = True
        admin.save()
        print("‚úÖ ADMIN: senha corrigida (admin123)")
    except User.DoesNotExist:
        print("‚ö†Ô∏è Admin n√£o encontrado, criando...")
        create_admin_user(User)
    except Exception as e:
        print(f"‚ùå Erro no admin: {e}")
    
    # Corrigir teste
    try:
        teste = User.objects.get(username='teste')
        teste.set_password('teste123')
        teste.is_active = True
        teste.save()
        print("‚úÖ TESTE: senha corrigida (teste123)")
    except User.DoesNotExist:
        print("‚ÑπÔ∏è Usu√°rio teste n√£o encontrado")
    except Exception as e:
        print(f"‚ùå Erro no teste: {e}")
    
    # Corrigir marcelo
    try:
        marcelo = User.objects.get(username='marcelo')
        marcelo.set_password('marcelo123')
        marcelo.is_active = True
        marcelo.save()
        print("‚úÖ MARCELO: senha corrigida (marcelo123)")
    except User.DoesNotExist:
        print("‚ÑπÔ∏è Usu√°rio marcelo n√£o encontrado")
    except Exception as e:
        print(f"‚ùå Erro no marcelo: {e}")

if __name__ == "__main__":
    main() 